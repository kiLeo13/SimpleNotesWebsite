:root {
  --sidebar-background-color: rgb(33, 29, 43);
  --main-background-color: rgb(30, 27, 37);
  --scrollbar-width: 4px;
  --sidebar-item-background-color: rgb(19, 17, 25);
  --sidebar-bottom-background-color: rgb(13, 12, 17);
  --sidebar-item-hover-border-color: rgb(56, 51, 70);
  --sidebar-item-hover-background-color: rgb(15, 14, 20);
  --sidebar-padding: 13px;
  --black-background-container-zindex: 10;
}

* {
  font-family: Arial, Helvetica, sans-serif;
}

*:disabled {
  opacity: 20% !important;
  cursor: not-allowed !important;
}

/*
 * I am creating a new rule instead of using the above one
 * because 20% of opacity feels too low for inputs
 */
input:read-only {
  opacity: 45%;
  cursor: not-allowed;
}

body {
  margin: 0;
  padding: 0;
}

/* 
 * We cannot use `hidden` or `display:none` on required inputs 
 * because the browser must be able to "focus" them if the validation fails.
 * Instead, we visually hide the input while keeping it accessible 
 * and focusable for the browser and screen readers.
 */
.hidden-styled-file-input {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.black-background-container {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.5);
  user-select: none;
  backdrop-filter: blur(3px);
  z-index: var(--black-background-container-zindex);
  animation: smoothBackgroundLoad 200ms ease-in forwards;
}

.centered-screen {
  display: flex;
  align-items: center;
  justify-content: center;
}

.container {
  position: fixed;
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: 100%;
  inset: 0;
}

.left-menu {
  position: relative;
  background-color: var(--sidebar-background-color);
  border-right: 1px solid rgba(255, 255, 255, 0.1);
  display: grid;
  grid-template-rows: auto 1fr auto;
  height: 100vh;
  width: 270px;
  padding: var(--sidebar-padding);
  padding-bottom: 0;
  box-sizing: border-box;
  transition: width 0.3s;
}

@media (min-width: 1600px) {
  .left-menu {
    width: 320px;
  }
}

@media (max-width: 800px) {
  .left-menu {
    width: 230px;
  }
}

.menu-upper-controls {
  display: flex;
  flex-direction: column;
}

#search-input {
  height: 30px;
  background-color: rgba(0, 0, 0, 0.2);
  outline: none;
  border: 0.3em solid rgba(0, 0, 0, 0.2);
  padding-left: 8px;
  color: rgb(158, 158, 158);
  border-radius: 0.4em;
  transition: border-color 0.3s;
}

#search-input:focus {
  border-color: rgb(75, 53, 129);
}

#search-input::placeholder {
  color: rgb(82, 82, 82);
}

.menu-divider {
  margin: 15px 0;
  height: 1px;
  background-color: rgba(255, 255, 255, 0.1);
}

#search-result-count {
  margin-top: 0;
  color: rgb(90, 90, 90);
  font-size: 0.8em;
}

.menu-lower-items {
  display: flex;
  flex-direction: column;
  margin-top: 5px;
  margin-right: -13px;
  margin-left: -13px;
  padding: 8px 13px;
  overflow: hidden;
  gap: 8px;
}

.menu-lower-items:hover {
  overflow-y: auto;
}

.note-item {
  display: flex;
  flex-shrink: 0;
  align-items: center;
  padding: 10px;
  font-size: 14px;
  box-sizing: border-box;
  background-color: var(--sidebar-item-background-color);
  border-radius: 0.5em;
  min-height: 45px;
  width: 100%;
  color: rgb(173, 173, 173);
  box-shadow: 0.2em 0.2em 10px rgba(0, 0, 0, 0.125);
  user-select: none;
  line-height: 130%;
  z-index: 2;
  transition:
    scale 0.3s,
    background-color 0.3s;
}

.note-item:hover {
  outline: 1px solid var(--sidebar-item-hover-border-color);
  scale: 103%;
  cursor: pointer;
  height: max-content;
  background-color: var(--sidebar-item-hover-background-color)
}

.note-item-title {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.note-item:hover .note-item-title {
  overflow: visible;
  white-space: normal;
}

.note-item:active {
  scale: 97%;
}

.menu-footer-controls {
  height: 60px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  box-sizing: border-box;
  margin-left: calc(var(--sidebar-padding) * -1);
  margin-right: calc(var(--sidebar-padding) * -1);
  background-color: var(--sidebar-bottom-background-color);
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
  transition: margin-bottom 0.5s;
}

.footer-control-button {
  display: flex;
  height: 100%;
  aspect-ratio: 1;
  align-items: center;
  justify-content: center;
  background-color: rgb(104, 93, 133);
  border: none;
  border-radius: 8px;
  font-size: 35px;
  color: rgba(0, 0, 0, 0.6);
  font-weight: 700;
  cursor: pointer;
  user-select: none;
  transition: background-color 0.3s;
}

.footer-control-button:hover:not(:disabled) {
  background-color: rgb(130, 118, 161);
}

.sidebar-pfp {
  display: flex;
  height: 100%;
  aspect-ratio: 1;
  justify-content: center;
  align-items: center;
  border-radius: 100%;
  color: rgb(145, 145, 145);
  background-color: rgb(50, 50, 238);
  user-select: none;
}

.sidebar-pfp:hover {
  cursor: pointer;
}

.legal-disclaimer {
  color: rgba(255, 255, 255, 0.3);
  display: flex;
  align-items: center;
  justify-content: end;
  font-size: 1.3vh;
  position: fixed;
  background-color: rgba(0, 0, 0, 0.5);
  inset: auto 0 0 auto;
  padding: 0.18vh 0.4vh;
  height: 1.8vh;
  border-top-left-radius: 0.2em;
  user-select: none;
}

/* Page Alerts */
.page-alert-container {
  position: fixed;
  border-radius: 8px;
  color: rgba(220, 220, 220, 0.9);
  font-size: 16px;
  top: 16px;
  left: 50%;
  max-width: 500px;
  line-height: 130%;
  word-break: break-all;
  transform: translateX(-50%);
  z-index: 100;
  padding: 10px 15px;
  border-style: solid;
  border-width: 1px;
  user-select: none;
  transition: opacity 100ms ease;
}

.page-alert-container.show {
  animation: alertSlideDown 30ms ease-out forwards;
}

.page-alert-container:hover {
  cursor: pointer;
}

.alert-level-success {
  background-color: rgba(80, 255, 80, 0.4);
  border-color: rgba(95, 235, 95, 0.4);
}

.alert-level-info {
  background-color: rgba(80, 121, 255, 0.4);
  border-color: rgba(82, 82, 241, 0.4);
}

.alert-level-warn {
  background-color: rgba(255, 234, 42, 0.5);
  border-color: rgba(251, 255, 0, 0.5);
}

.alert-level-error {
  background-color: rgba(255, 60, 60, 0.4);
  border-color: rgba(209, 119, 119, 0.5);
}

/* Specific Loaders */
.sidebar-loader-container {
  position: absolute;
  display: flex;
  inset: 0;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}

#sidebar-loader {
  scale: 0.5;
}

/* Scroll bar */
::-webkit-scrollbar {
  width: var(--scrollbar-width);
}

::-webkit-scrollbar-thumb {
  cursor: default !important;
}

::-webkit-scrollbar-thumb {
  background: rgba(136, 136, 136, 0.5);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(136, 136, 136, 0.3);
}

/* Loaders */
.loader {
  pointer-events: none;
  width: 50px;
  aspect-ratio: 1;
  border-radius: 50%;
  border: 8px solid rgba(255, 255, 255, 0.5);
  animation:
    l20-1 0.8s infinite linear alternate,
    l20-2 1.6s infinite linear;
}

@keyframes l20-1{
  0%    {clip-path: polygon(50% 50%,0       0,  50%   0%,  50%    0%, 50%    0%, 50%    0%, 50%    0% )}
  12.5% {clip-path: polygon(50% 50%,0       0,  50%   0%,  100%   0%, 100%   0%, 100%   0%, 100%   0% )}
  25%   {clip-path: polygon(50% 50%,0       0,  50%   0%,  100%   0%, 100% 100%, 100% 100%, 100% 100% )}
  50%   {clip-path: polygon(50% 50%,0       0,  50%   0%,  100%   0%, 100% 100%, 50%  100%, 0%   100% )}
  62.5% {clip-path: polygon(50% 50%,100%    0, 100%   0%,  100%   0%, 100% 100%, 50%  100%, 0%   100% )}
  75%   {clip-path: polygon(50% 50%,100% 100%, 100% 100%,  100% 100%, 100% 100%, 50%  100%, 0%   100% )}
  100%  {clip-path: polygon(50% 50%,50%  100%,  50% 100%,   50% 100%,  50% 100%, 50%  100%, 0%   100% )}
}

@keyframes l20-2{ 
  0%    {transform:scaleY(1)  rotate(0deg)}
  49.99%{transform:scaleY(1)  rotate(135deg)}
  50%   {transform:scaleY(-1) rotate(0deg)}
  100%  {transform:scaleY(-1) rotate(-135deg)}
}

/*
 * Here are some useful animations needed to make the website a bit more...
 * beautiful and smooth.
 */

/* Shaking animation */
.shaky {
  animation: shake 0.3s infinite;
}

@keyframes shake {
  0%   { transform: translateX(   0); }
  20%  { transform: translateX(-2px); }
  30%  { transform: translateY(-2px); }
  40%  { transform: translateX( 2px); }
  50%  { transform: translateY( 2px); }
  60%  { transform: translateX(-2px); }
  70%  { transform: translateY(-2px); }
  80%  { transform: translateX( 2px); }
  90%  { transform: translateY( 2px); }
  100% { transform: translateX(   0); }
}

/* Slide Down animation for custom alerts */
@keyframes alertSlideDown {
  0% {
    transform: translate(-50%, -120%);
  }
  100% {
    transform: translate(-50%, 0);
  }
}

@keyframes smoothBackgroundLoad {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}